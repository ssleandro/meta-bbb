From a1f5b73ab0ffa42003ddc8bc7afcd45b79fb0a8f Mon Sep 17 00:00:00 2001
From: Fabio Berton <fabio.berton@ossystems.com.br>
Date: Tue, 27 Mar 2018 14:37:40 -0300
Subject: [PATCH 3/5] board/ti/am335x: Add code from smaai display
Organization: O.S. Systems Software LTDA.

Code from:

https://bitbucket.org/inobram/uboot/src/1be2580b2964775308186c06b3532b4cfd6a399a/am335x_display/?at=master

Signed-off-by: Fabio Berton <fabio.berton@ossystems.com.br>
---
 board/ti/am335x/Kconfig  |   9 ++
 board/ti/am335x/Makefile |   1 +
 board/ti/am335x/board.c  |   3 +-
 board/ti/am335x/glcd.c   | 286 +++++++++++++++++++++++++++++++++++++++
 board/ti/am335x/glcd.h   |  74 ++++++++++
 board/ti/am335x/mux.c    |   1 +
 board/ti/am335x/smaai.h  |  65 +++++++++
 include/spi.h            |   3 +
 8 files changed, 441 insertions(+), 1 deletion(-)
 create mode 100644 board/ti/am335x/glcd.c
 create mode 100644 board/ti/am335x/glcd.h
 create mode 100644 board/ti/am335x/smaai.h

diff --git a/board/ti/am335x/Kconfig b/board/ti/am335x/Kconfig
index 97374bdc12..a84e91b3dc 100644
--- a/board/ti/am335x/Kconfig
+++ b/board/ti/am335x/Kconfig
@@ -1,5 +1,14 @@
 if TARGET_AM335X_EVM
 
+config SPL_ENV_SUPPORT
+	default y
+
+config SPL_WATCHDOG_SUPPORT
+	default y
+
+config SPL_YMODEM_SUPPORT
+	default y
+
 config SYS_BOARD
 	default "am335x"
 
diff --git a/board/ti/am335x/Makefile b/board/ti/am335x/Makefile
index 804ac379db..9043caae76 100644
--- a/board/ti/am335x/Makefile
+++ b/board/ti/am335x/Makefile
@@ -11,3 +11,4 @@ obj-y	:= mux.o
 endif
 
 obj-y	+= board.o
+obj-y	+= glcd.o
diff --git a/board/ti/am335x/board.c b/board/ti/am335x/board.c
index 57b0ecf955..64c8ec5b0e 100644
--- a/board/ti/am335x/board.c
+++ b/board/ti/am335x/board.c
@@ -40,6 +40,7 @@
 #include "../common/board_detect.h"
 #include "board.h"
 #include "hash-string.h"
+#include "glcd.h"
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -1263,7 +1264,7 @@ int board_late_init(void)
 	}
 #endif
 #endif
-
+    setup_display();
 	return 0;
 }
 #endif
diff --git a/board/ti/am335x/glcd.c b/board/ti/am335x/glcd.c
new file mode 100644
index 0000000000..ae13ef5ee4
--- /dev/null
+++ b/board/ti/am335x/glcd.c
@@ -0,0 +1,286 @@
+#include "glcd.h"
+#include "smaai.h"
+/*
+ * Utilizando SPI0
+ * SPI0_CS0  = P9_17 Chip Select
+ * SPI0_DI   = P9_18 MOSI Master Out Slave In
+ * SPI0_DO   = P9_21 MISO Master In Slave Out (unused)
+ * SPI0_SCLK = P9_22 Clock
+ */
+
+uint8_t data_send = DATA;
+uint8_t command_send = COMMAND;
+
+static int write_bytes(uint8_t* tx, uint16_t size) {
+
+       struct spi_slave *slave;
+       unsigned int    bus = 0;
+       unsigned int    cs = 0;
+       unsigned int    mode = 3;
+       int bitlen = 8*size;
+       unsigned char* rx = malloc(size * sizeof(unsigned char));
+
+       slave = spi_setup_slave(bus, cs, 3000000, mode);
+
+       if (!slave) {
+        //    printf("Invalid device %d:%d\n", bus, cs);
+
+           free(rx);
+           return 1;
+       }
+
+       spi_claim_bus(slave);
+       spi_xfer(slave, bitlen, tx, rx, SPI_XFER_BEGIN | SPI_XFER_END);
+    //    if(spi_xfer(slave, bitlen, tx, rx, SPI_XFER_BEGIN | SPI_XFER_END) != 0) {
+    //         //    printf("Error during SPI transaction\n");
+    //    }
+
+       spi_release_bus(slave);
+       spi_free_slave(slave);
+
+       free(rx);
+       return 0;
+}
+
+void initialize_display(uint8_t mode){
+    uint8_t command = 0xFF;
+    uint8_t *pCommand = &command;
+
+    reset();
+
+    write_data(pCommand);
+
+    *pCommand = GLCD_GRAPHIC_HOME & 0xff;
+	write_data(pCommand);
+
+    *pCommand = GLCD_GRAPHIC_HOME >> 8;
+	write_data(pCommand);
+
+    *pCommand = T6963_SET_GRAPHIC_HOME_ADDRESS;
+	write_command(pCommand);
+
+    *pCommand = GLCD_GRAPHIC_AREA;
+	write_data(pCommand);
+
+    *pCommand = 0x00;
+	write_data(pCommand);
+
+    *pCommand = T6963_SET_GRAPHIC_AREA;
+	write_command(pCommand);
+
+    *pCommand = GLCD_TEXT_HOME;
+	write_data(pCommand);
+
+    *pCommand = GLCD_TEXT_HOME >> 8;
+	write_data(pCommand);
+
+    *pCommand = T6963_SET_TEXT_HOME_ADDRESS;
+	write_command(pCommand);
+
+    *pCommand = GLCD_TEXT_AREA;
+	write_data(pCommand);
+
+    *pCommand = 0x00;
+	write_data(pCommand);
+
+    *pCommand = T6963_SET_TEXT_AREA;
+	write_command(pCommand);
+
+    *pCommand = GLCD_OFFSET_REGISTER;
+	write_data(pCommand);
+
+    *pCommand = 0x00;
+	write_data(pCommand);
+
+    *pCommand = T6963_SET_OFFSET_REGISTER;
+	write_command(pCommand);
+
+    *pCommand = T6963_MODE_SET | T6963_MODE_SET_OR;
+	write_command(pCommand);
+
+	if(mode){
+        *pCommand = T6963_DISPLAY_MODE | T6963_GRAPHIC_DISPLAY_ON | T6963_TEXT_DISPLAY_ON;
+		write_command(pCommand);
+	} else {
+        *pCommand = T6963_DISPLAY_MODE;
+		write_command(pCommand);
+	}
+    //printf("clear screnn\n");
+	clear_screen();
+
+}
+
+void bitmap(uint8_t* bitmap_write, uint8_t x_position, uint8_t y_position, uint32_t size){
+    uint32_t i = 0;
+
+    for(i = 0; i < size; i++){
+        graphic_goto(x_position, y_position);
+        write_display_data(bitmap_write++);
+        if(~(i % 2)){
+            x_position += 8;
+        }
+        else{
+            x_position -= 8;
+            y_position += 1;
+        }
+    }
+}
+
+void bitmap_logo(uint8_t* bitmap_write, uint8_t x_position, uint8_t y_position, uint32_t width, uint32_t height){
+    uint32_t i = 0, j = 0;
+    uint32_t bwidth = width / 8;
+    uint8_t x = x_position;
+
+    for(i = 0; i < height; i++){
+        for(j = 0; j < bwidth; j++){
+            graphic_goto(x, y_position);
+            write_display_data(bitmap_write++);
+            x += 8;
+        }
+
+        x = x_position;
+        y_position += 1;
+
+    }
+}
+
+static void write_command(uint8_t *command){
+	/* append two arrays */
+	uint8_t* command_array = malloc((2) * sizeof(uint8_t));
+	memcpy(command_array + 1, command, 1 * sizeof(uint8_t));
+
+    command_send &= ~TOGGLE;
+    memcpy(command_array, &command_send, 1 * sizeof(uint8_t));
+	write_bytes(command_array, 2);
+
+    command_send |= TOGGLE;
+    memcpy(command_array , &command_send, 1 * sizeof(uint8_t));
+	write_bytes(command_array, 2);
+
+	free(command_array);
+}
+static void write_data(uint8_t *data){
+    /* append two arrays */
+    uint8_t* data_array = malloc((2) * sizeof(uint8_t));
+    memcpy((data_array + 1), data, 1 * sizeof(uint8_t));
+
+    data_send &= ~TOGGLE;
+    memcpy(data_array, &data_send, 1 * sizeof(uint8_t));
+    write_bytes(data_array, 2);
+
+    data_send |= TOGGLE;
+    memcpy(data_array, &data_send, 1 * sizeof(uint8_t));
+    write_bytes(data_array, 2);
+
+    free(data_array);
+}
+
+static void write_display_data(uint8_t* data){
+    uint8_t Command;
+    Command = (uint8_t)T6963_DATA_WRITE_AND_INCREMENT;
+
+    write_data(data);
+	write_command(&Command);
+}
+
+void write_string(uint8_t* string){
+    uint8_t character = 0;
+    character = *string - 32;
+
+    while(*string++){
+        write_display_data(&character);
+	    character = *string - 32;
+    }
+}
+
+static void clear_text(){
+	uint16_t i = 0;
+    uint8_t Data = 0;
+
+	set_address_pointer( GLCD_TEXT_HOME);
+
+    for (i = 0; i < GLCD_TEXT_SIZE; i++){
+		write_display_data(&Data);
+	}
+}
+
+static void  clear_cg(){
+	uint16_t i = 0;
+    uint8_t Data = 0;
+
+	set_address_pointer(GLCD_EXTERNAL_CG_HOME);
+
+	for (i = 0; i < 2048; i++){
+		write_display_data(&Data);
+	}
+}
+
+static void  clear_graphic(){
+	int i = 0;
+    uint8_t Data = 0;
+
+	set_address_pointer(GLCD_GRAPHIC_HOME);
+
+    for (i = 0; i < GLCD_GRAPHIC_SIZE; i++){
+		write_display_data(&Data);
+	}
+}
+
+static void set_address_pointer(uint16_t address){
+    uint8_t Addr = 0;
+
+    Addr = (uint8_t) (address & 0xff);
+    write_data(&Addr);
+
+    Addr = (uint8_t) (address >> 8);
+	write_data(&Addr);
+
+    Addr = T6963_SET_ADDRESS_POINTER;
+	write_command(&Addr);
+}
+
+void text_goto(uint8_t x, uint8_t y){
+    uint16_t Addr;
+
+    Addr = GLCD_TEXT_HOME + x + (GLCD_TEXT_AREA * y);
+    set_address_pointer(Addr);
+}
+
+void graphic_goto(uint8_t x, uint8_t y){
+    uint16_t Addr;
+
+    Addr = GLCD_GRAPHIC_HOME + x / GLCD_FONT_WIDTH + (GLCD_GRAPHIC_AREA * y);
+    set_address_pointer(Addr);
+}
+
+void clear_screen(){
+	clear_text();
+	//clear_cg()
+	clear_graphic();
+}
+
+static void reset(){
+	uint8_t command[2] = {0x00, 0x00};
+	write_bytes((uint8_t*) command, 2);
+
+	command[0] = 0xff;
+	command[1] = 0xff;
+	write_bytes((uint8_t*) command, 2);
+}
+
+void setup_display(){
+    uint8_t* pString;
+    uint8_t message[] = "         Carregando...       ";
+
+    /* Initialize SPI */
+    spi_init();
+
+    initialize_display(1);
+
+    pString = &smaai5[0];
+    bitmap_logo(pString, 0, 33, 240, 63);
+
+    pString = &message[0];
+    text_goto(0,15);
+    write_string(pString);
+}
diff --git a/board/ti/am335x/glcd.h b/board/ti/am335x/glcd.h
new file mode 100644
index 0000000000..179ccca3f6
--- /dev/null
+++ b/board/ti/am335x/glcd.h
@@ -0,0 +1,74 @@
+#include "spi.h"
+#include "linux/types.h"
+
+#define BUFFER_SIZE 	64
+
+#define COMMAND 		52
+#define DATA 			36
+
+#define TOGGLE          8
+
+#define ON				1
+#define OFF				0
+
+#define  GLCD_LEFT		0
+#define  GLCD_RIGHT		1
+
+#define DELAY1  0.01
+
+// Display properties
+#define GLCD_NUMBER_OF_LINES 		128
+#define GLCD_PIXELS_PER_LINE 		240
+#define GLCD_FONT_WIDTH 			8
+
+#define GLCD_GRAPHIC_AREA 			30 		//(GLCD_PIXELS_PER_LINE / GLCD_FONT_WIDTH)
+#define GLCD_TEXT_AREA 				30 		//(GLCD_PIXELS_PER_LINE / GLCD_FONT_WIDTH)
+#define GLCD_GRAPHIC_SIZE 			3840 	//(GLCD_GRAPHIC_AREA * GLCD_NUMBER_OF_LINES)
+#define GLCD_TEXT_SIZE 				480  	//(GLCD_TEXT_AREA * (GLCD_NUMBER_OF_LINES/8))
+
+#define GLCD_TEXT_HOME				0
+#define GLCD_GRAPHIC_HOME			480 	//(GLCD_TEXT_HOME + GLCD_TEXT_SIZE)
+#define GLCD_OFFSET_REGISTER 		2
+#define GLCD_EXTERNAL_CG_HOME  		(GLCD_OFFSET_REGISTER << 11)
+
+// Control word set commands:
+#define T6963_SET_TEXT_HOME_ADDRESS 	0x40
+#define T6963_SET_TEXT_AREA 			0x41
+#define T6963_SET_GRAPHIC_HOME_ADDRESS 	0x42
+#define T6963_SET_GRAPHIC_AREA 			0x43
+
+// Register set commads:
+#define T6963_SET_OFFSET_REGISTER 		0x22
+#define T6963_SET_ADDRESS_POINTER 		0x24
+
+// Mode set commands (OR with CG rom commands)
+#define T6963_MODE_SET 				0x80
+#define T6963_MODE_SET_OR 			0x00
+
+// Display mode commands
+#define T6963_DISPLAY_MODE 			0x90
+#define T6963_TEXT_DISPLAY_ON 		0x04
+#define T6963_GRAPHIC_DISPLAY_ON    0x08
+// Data read/write
+#define T6963_DATA_WRITE_AND_INCREMENT 		0xC0
+#define T6963_DATA_READ_AND_NONVARIABLE 	0xC5
+
+void setup_display();
+void initialize_display(uint8_t mode);
+void bitmap(uint8_t* bitmap_write, uint8_t x_position, uint8_t y_position, uint32_t size);
+void bitmap_logo(uint8_t* bitmap_write, uint8_t x_position, uint8_t y_position, uint32_t width, uint32_t height);
+void clear_screen();
+void text_goto(uint8_t x, uint8_t y);
+void write_string(uint8_t* string);
+void text_goto(uint8_t x, uint8_t y);
+void graphic_goto(uint8_t x, uint8_t y);
+void clear_screen();
+static int write_bytes(uint8_t* tx, uint16_t size);
+static void write_command(uint8_t *command);
+static void write_data(uint8_t *data);
+static void write_display_data(uint8_t* data);
+static void clear_text();
+static void clear_cg();
+static void clear_graphic();
+static void set_address_pointer(uint16_t address);
+static void reset();
diff --git a/board/ti/am335x/mux.c b/board/ti/am335x/mux.c
index 3733246852..a00ce77d80 100644
--- a/board/ti/am335x/mux.c
+++ b/board/ti/am335x/mux.c
@@ -429,4 +429,5 @@ void enable_board_pin_mux(void)
 		/* Unknown board. We might still be able to boot. */
 		puts("Bad EEPROM or unknown board, cannot configure pinmux.");
 	}
+    configure_module_pin_mux(spi0_pin_mux);
 }
diff --git a/board/ti/am335x/smaai.h b/board/ti/am335x/smaai.h
new file mode 100644
index 0000000000..b0db7daca9
--- /dev/null
+++ b/board/ti/am335x/smaai.h
@@ -0,0 +1,65 @@
+unsigned char smaai5[] = {
+	0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x37, 0x6d, 0xb7, 0x6e, 0xd0,
+	0x0, 0x0, 0x0, 0x3f, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfd, 0xff, 0xfd, 0xfb, 0xf8,
+	0x0, 0x0, 0x0, 0x6d, 0xff, 0xd0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd7, 0x55, 0x57, 0x5e, 0xae,
+	0x0, 0x0, 0x0, 0xdb, 0x76, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xed, 0xff, 0xfd, 0xeb, 0xfe,
+	0x0, 0x0, 0x0, 0xff, 0xad, 0xad, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xbf, 0xb6, 0xdf, 0xbf, 0x6a,
+	0x0, 0x0, 0x1, 0xaa, 0xff, 0xf7, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x72, 0xaa, 0xa4, 0xaa, 0xfe,
+	0x0, 0x0, 0x2, 0xf0, 0xed, 0x7d, 0x70, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xe4, 0x11, 0x11, 0x11, 0xb6,
+	0x0, 0x0, 0x7, 0xb1, 0x77, 0xaf, 0xdc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x71, 0x44, 0x4a, 0x45, 0xee,
+	0x0, 0x0, 0x1e, 0xe8, 0x5a, 0xd5, 0xbc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xca, 0x29, 0x21, 0x2a, 0xba,
+	0x0, 0x0, 0x7b, 0xe1, 0x6f, 0x7a, 0xef, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x61, 0x44, 0x94, 0x43, 0x76,
+	0x0, 0x0, 0xaf, 0x50, 0xbb, 0xaf, 0x77, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xea, 0x12, 0x55, 0xbb, 0xec,
+	0x0, 0x1, 0xfa, 0x89, 0x44, 0xb5, 0xbb, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0xa4, 0xa4, 0xff, 0xee, 0xfe,
+	0x0, 0x3, 0x5d, 0x20, 0x51, 0x5e, 0xdd, 0x80, 0x1, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xe2, 0x11, 0x56, 0xbb, 0xac,
+	0x0, 0x7, 0xf4, 0x49, 0xa, 0x23, 0x56, 0xc0, 0x3f, 0xff, 0x80, 0xff, 0xf8, 0x1f, 0xff, 0x0, 0x1f, 0xfe, 0x0, 0x1, 0xff, 0xf0, 0x7, 0xff, 0xe5, 0x54, 0xa4, 0xfd, 0xdd, 0xb8,
+	0x0, 0xd, 0x62, 0x80, 0xd1, 0x4a, 0xef, 0xe0, 0xdb, 0x5e, 0xf3, 0xdf, 0xec, 0x3b, 0xfd, 0x80, 0x7f, 0xfb, 0x80, 0x3, 0xbf, 0xd8, 0x1f, 0xff, 0xbf, 0xe1, 0x12, 0xaf, 0x77, 0xf0,
+	0x0, 0x1f, 0xd4, 0x29, 0x8, 0xaa, 0xb6, 0xa3, 0xed, 0xeb, 0xfb, 0x75, 0x5e, 0x6e, 0xab, 0xc0, 0x6a, 0xaf, 0x80, 0x6, 0xea, 0xb8, 0x1a, 0xaa, 0xf6, 0xca, 0x45, 0xfb, 0xdd, 0x40,
+	0x0, 0x3b, 0x49, 0x40, 0x52, 0x12, 0xd7, 0xe6, 0xbf, 0xbe, 0xae, 0xdf, 0xf6, 0x7b, 0xfe, 0xc0, 0xff, 0xfa, 0xc0, 0x7, 0xbf, 0xec, 0x3f, 0xff, 0xaf, 0x50, 0x90, 0xad, 0x0, 0x0,
+	0x0, 0x6f, 0x24, 0x2a, 0x89, 0x55, 0x3a, 0xbf, 0xed, 0x6f, 0xff, 0xfa, 0xdf, 0xdf, 0x5b, 0xc0, 0xd5, 0x5f, 0x80, 0xd, 0xf5, 0xbc, 0x35, 0x55, 0xfd, 0xca, 0x4a, 0xff, 0x0, 0x0,
+	0x0, 0xfa, 0xa9, 0x40, 0x52, 0xaa, 0xab, 0xfa, 0xb0, 0x0, 0xaa, 0x80, 0x35, 0x70, 0x6, 0xe1, 0xf8, 0x5, 0xc0, 0xf, 0x0, 0x6e, 0x3e, 0x0, 0x56, 0xc1, 0x22, 0xb5, 0xe0, 0x0,
+	0x0, 0xad, 0x44, 0x91, 0x44, 0x45, 0x5b, 0x5b, 0xc0, 0x0, 0x7d, 0xc0, 0x1f, 0xd8, 0x3, 0x43, 0x50, 0x6, 0xc0, 0x1b, 0x80, 0x3a, 0x2a, 0x0, 0xfb, 0xd4, 0x89, 0xff, 0xfc, 0x0,
+	0x1, 0xfa, 0xa9, 0x8, 0x52, 0x94, 0xad, 0xef, 0x0, 0x0, 0x57, 0x80, 0x1b, 0x70, 0x3, 0xc3, 0xf0, 0x3, 0xe0, 0x3e, 0x0, 0x36, 0x3e, 0x0, 0x6e, 0x89, 0x25, 0x55, 0x5d, 0x0,
+	0x3, 0xb5, 0x12, 0x41, 0x8, 0x55, 0x55, 0xba, 0x0, 0xf0, 0x7a, 0xc0, 0x1d, 0xe0, 0x7, 0x66, 0xa0, 0x3, 0x40, 0x37, 0x0, 0x3e, 0x6c, 0x0, 0xdb, 0xd2, 0x11, 0x7f, 0xf7, 0x0,
+	0x3, 0x75, 0x48, 0xa8, 0xd2, 0xa5, 0x5b, 0xec, 0x1, 0xdd, 0xdf, 0x80, 0xe, 0xa0, 0x3, 0xc7, 0xc0, 0x3, 0xf0, 0x6c, 0x0, 0x1b, 0x3e, 0x0, 0xf6, 0x88, 0xa4, 0x8b, 0x6d, 0xc0,
+	0x7, 0xd5, 0x55, 0x2, 0x9, 0x15, 0x55, 0xbc, 0x1, 0xfe, 0xeb, 0x0, 0xd, 0xe0, 0x2, 0xcd, 0x40, 0x2, 0xa0, 0x7e, 0x0, 0x1e, 0x6a, 0x0, 0xdd, 0xd2, 0x4a, 0x22, 0xff, 0x60,
+	0xd, 0x6a, 0x40, 0x51, 0x52, 0x52, 0xad, 0xd4, 0x0, 0xb7, 0xbd, 0x0, 0xf, 0x80, 0x3, 0xef, 0xc0, 0x1, 0xf0, 0xd4, 0x0, 0x1b, 0xbc, 0x0, 0xef, 0x84, 0x81, 0x14, 0xad, 0xe0,
+	0xf, 0xd5, 0x2a, 0x88, 0x44, 0xaa, 0xab, 0x78, 0x0, 0x1e, 0xd7, 0x0, 0x5, 0xc0, 0x6, 0xbb, 0x0, 0x1, 0xb1, 0xf8, 0x0, 0xf, 0x6c, 0x1, 0xb5, 0x52, 0x2a, 0x42, 0x5f, 0x70,
+	0x1a, 0xaa, 0xa9, 0x21, 0x29, 0x15, 0x55, 0xdc, 0x0, 0x3, 0xfb, 0x0, 0xf, 0x0, 0x3, 0xfd, 0xc, 0x1, 0xd9, 0x58, 0x60, 0xd, 0xfc, 0x0, 0xdf, 0x88, 0x91, 0x29, 0x2b, 0xb8,
+	0x1b, 0xd5, 0x44, 0x48, 0x84, 0xa4, 0xab, 0xb4, 0x0, 0x0, 0xd6, 0x0, 0x7, 0x0, 0x3, 0x6b, 0xa, 0x0, 0xf3, 0xf0, 0xc0, 0xf, 0xd4, 0x1, 0xf5, 0xb7, 0x48, 0x84, 0x4d, 0xd8,
+	0x1f, 0x54, 0xa9, 0x21, 0x52, 0x55, 0x55, 0xec, 0x0, 0x0, 0xee, 0x0, 0x5, 0x0, 0x3, 0xbe, 0xc, 0x0, 0xdd, 0x60, 0xc0, 0xa, 0xfc, 0x0, 0xaf, 0xff, 0xf5, 0x29, 0x16, 0xec,
+	0x36, 0xaa, 0x92, 0x48, 0x49, 0x25, 0x5b, 0x7e, 0x0, 0x0, 0x7c, 0x10, 0x3, 0x10, 0x3, 0x6c, 0x1c, 0x0, 0x7f, 0xe0, 0xe0, 0x7, 0xa8, 0x1, 0xfa, 0xaa, 0xfc, 0x44, 0xa3, 0xbc,
+	0x3b, 0x55, 0x49, 0x1, 0x22, 0x95, 0x57, 0xab, 0x0, 0x0, 0x2e, 0x10, 0x2, 0x10, 0x3, 0xfc, 0x3e, 0x0, 0xd6, 0xa1, 0xe0, 0x6, 0xfc, 0x1, 0xaf, 0xff, 0x56, 0x92, 0xa, 0xf6,
+	0x6e, 0xd4, 0xa4, 0xa8, 0x94, 0x52, 0xab, 0x7f, 0xc0, 0x0, 0x74, 0x30, 0x0, 0x18, 0x3, 0x54, 0x0, 0x0, 0x7d, 0xc1, 0x0, 0x7, 0x58, 0x1, 0xf5, 0x55, 0xff, 0x24, 0xa3, 0x7e,
+	0x7d, 0x55, 0x12, 0x1, 0x41, 0x2a, 0xad, 0xd5, 0xf8, 0x0, 0x5c, 0x18, 0x0, 0x30, 0x3, 0xf8, 0x0, 0x0, 0x6b, 0x80, 0x0, 0x3, 0xe8, 0x1, 0x5d, 0xee, 0xab, 0x11, 0x15, 0xaa,
+	0x56, 0xaa, 0xa8, 0xa8, 0x54, 0x95, 0x57, 0x7e, 0xbe, 0x0, 0x78, 0x30, 0x0, 0x30, 0x3, 0x50, 0x0, 0x0, 0x3f, 0x0, 0x0, 0x2, 0xb8, 0x3, 0xeb, 0x5b, 0xdd, 0xa4, 0x41, 0x7f,
+	0x7d, 0xaa, 0x92, 0x42, 0x42, 0x49, 0x57, 0xab, 0xef, 0x0, 0x68, 0x38, 0x0, 0x78, 0x3, 0xf0, 0x4, 0x0, 0x35, 0x0, 0x0, 0x3, 0xd8, 0x1, 0x5e, 0xf6, 0xb7, 0x92, 0x95, 0xda,
+	0x6d, 0x55, 0x49, 0x29, 0x29, 0x55, 0x5d, 0x79, 0xbb, 0x0, 0xd8, 0x78, 0x0, 0xe0, 0x3, 0x60, 0xff, 0x0, 0x3f, 0xf, 0xf8, 0x1, 0xb8, 0x3, 0xf7, 0x5d, 0xed, 0xa0, 0x48, 0xbf,
+	0xdd, 0xaa, 0x52, 0x40, 0x44, 0x92, 0xaf, 0xd8, 0x6e, 0x0, 0xf8, 0x6c, 0x0, 0xb8, 0x3, 0xc1, 0xfb, 0x80, 0x16, 0xf, 0xf0, 0x1, 0xe8, 0x1, 0x5a, 0xee, 0xbb, 0x8a, 0x92, 0xf5,
+	0xf6, 0xaa, 0x89, 0x11, 0x52, 0x4a, 0xaa, 0xb0, 0x8, 0x1, 0xb0, 0x7c, 0x0, 0xf0, 0x3, 0x41, 0xaf, 0x0, 0x1c, 0x1d, 0x58, 0x1, 0xb0, 0x3, 0xef, 0xb7, 0xde, 0xd2, 0x25, 0xbf,
+	0xba, 0xaa, 0x54, 0x48, 0x44, 0xaa, 0xbf, 0xe0, 0x0, 0x7, 0xf0, 0x6c, 0x1, 0xd0, 0x3, 0x83, 0xfb, 0x80, 0x1c, 0x3b, 0xf8, 0x0, 0xf0, 0x3, 0x75, 0x7a, 0xb5, 0x89, 0x40, 0xd5,
+	0xdd, 0xaa, 0xa2, 0x81, 0x22, 0x49, 0x5a, 0xb8, 0x0, 0x16, 0xa0, 0xf4, 0x3, 0xb8, 0x3, 0x7, 0x5d, 0x80, 0x8, 0x2f, 0x5c, 0x0, 0xd0, 0x3, 0xaf, 0xd7, 0xef, 0xd2, 0x15, 0xbf,
+	0xf6, 0xaa, 0x94, 0x51, 0x49, 0x2a, 0xbf, 0xfe, 0x81, 0x5f, 0xf5, 0x5f, 0x55, 0xf5, 0x5b, 0xd6, 0xe7, 0xaa, 0xda, 0xba, 0xed, 0x6b, 0xfd, 0x56, 0xfa, 0xbd, 0x5a, 0x88, 0xa2, 0xf6,
+	0xbb, 0x55, 0x49, 0x8, 0x24, 0x95, 0x6b, 0x57, 0xff, 0xfa, 0xbf, 0xed, 0xff, 0x5f, 0xfe, 0xff, 0x8d, 0xff, 0xff, 0xf6, 0x7f, 0xff, 0x77, 0xff, 0x57, 0xd6, 0xf7, 0xa2, 0x15, 0x5a,
+	0xdd, 0xaa, 0x50, 0xaa, 0x92, 0x52, 0xfc, 0xfb, 0x7d, 0xaf, 0xdb, 0x77, 0xbb, 0xed, 0xb7, 0xb5, 0xc6, 0xb6, 0xb6, 0xdc, 0x55, 0xb6, 0xde, 0xdb, 0xfa, 0xbb, 0xad, 0x94, 0xa2, 0xfe,
+	0xf5, 0x55, 0x25, 0xd, 0x49, 0x4a, 0xd8, 0x6e, 0xd6, 0xfa, 0xed, 0xbd, 0x6d, 0x76, 0xda, 0xde, 0x87, 0xdb, 0xdb, 0x78, 0x3f, 0xff, 0xeb, 0x76, 0xaf, 0xee, 0xff, 0x22, 0x4b, 0xb6,
+	0x5e, 0xd5, 0x48, 0xae, 0x44, 0x2b, 0xe8, 0x17, 0xff, 0xd8, 0xff, 0xef, 0xff, 0xbf, 0xff, 0xfb, 0x3, 0x7f, 0x7f, 0xe8, 0x36, 0xab, 0x7d, 0xdd, 0xda, 0xb7, 0x56, 0x89, 0x12, 0xfc,
+	0x7b, 0x6a, 0xa5, 0xa, 0x52, 0xa7, 0x70, 0x1, 0x6d, 0x40, 0x15, 0x2, 0x92, 0x9, 0x49, 0x2a, 0x0, 0xa9, 0xa9, 0x20, 0x3b, 0x15, 0xb7, 0x6e, 0xb7, 0x6d, 0xee, 0x52, 0x45, 0xac,
+	0x6d, 0xaa, 0x28, 0x4f, 0x49, 0x2d, 0xa0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2f, 0x85, 0xde, 0xf5, 0xed, 0xdb, 0x5c, 0x84, 0x2b, 0xf4,
+	0x7e, 0xe9, 0x92, 0xad, 0x22, 0x5e, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1a, 0xd0, 0xbb, 0xaf, 0x7b, 0x7d, 0xfa, 0x29, 0x4e, 0xdc,
+	0x2b, 0x56, 0x48, 0x3b, 0x94, 0xab, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0xea, 0x57, 0xfb, 0xae, 0xd7, 0x68, 0x84, 0x2b, 0xf8,
+	0x3e, 0xb9, 0x52, 0xee, 0xd2, 0x7f, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x71, 0xa, 0xbe, 0xf7, 0xbb, 0xd2, 0x52, 0x9d, 0xa8,
+	0x37, 0x6e, 0x89, 0x7b, 0xc9, 0xeb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xbc, 0xa5, 0x6b, 0xba, 0xee, 0x89, 0x8, 0x6f, 0x70,
+	0x1b, 0xbb, 0x64, 0xaf, 0x6b, 0x7c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xef, 0x10, 0x96, 0xef, 0xfa, 0x50, 0xa5, 0x5b, 0xe0,
+	0x1e, 0xd6, 0xda, 0xfd, 0xef, 0xac, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdf, 0xca, 0x21, 0x2a, 0x84, 0x85, 0x11, 0xfe, 0xa0,
+	0xb, 0xed, 0xb6, 0xb7, 0xd5, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0xf1, 0x14, 0x88, 0x29, 0x28, 0xa6, 0xb5, 0xc0,
+	0x6, 0xb6, 0xed, 0xff, 0x5e, 0xa0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1e, 0xbe, 0xa2, 0x22, 0x84, 0x44, 0x17, 0xff, 0x0,
+	0x7, 0xfb, 0x5e, 0xbb, 0xdb, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xdf, 0x51, 0x49, 0x29, 0x22, 0xdd, 0x56, 0x0,
+	0x1, 0xaf, 0xb5, 0xdf, 0x77, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xeb, 0xed, 0x12, 0x42, 0x15, 0x77, 0xfc, 0x0,
+	0x0, 0xfa, 0xff, 0x6a, 0xde, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbd, 0x7f, 0xea, 0x29, 0xdf, 0xfd, 0x50, 0x0,
+	0x0, 0x6f, 0xd7, 0xff, 0xf6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3f, 0xb6, 0xff, 0xff, 0x76, 0xd7, 0xe8, 0x0,
+	0x0, 0x1d, 0x7a, 0xad, 0x5c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xdb, 0x56, 0xdb, 0xfb, 0xbf, 0x40, 0x0,
+	0x0, 0x7, 0xdf, 0xf7, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7f, 0xfb, 0xee, 0xae, 0xf4, 0x0, 0x0,
+	0x0, 0x0, 0xbb, 0xbd, 0xa0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd, 0xae, 0xbb, 0xfb, 0xd0, 0x0, 0x0,
+	0x0, 0x0, 0x0, 0x16, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7f, 0xff, 0x6e, 0x0, 0x0, 0x0};
+
diff --git a/include/spi.h b/include/spi.h
index 08c7480fda..eb042870d0 100644
--- a/include/spi.h
+++ b/include/spi.h
@@ -10,6 +10,9 @@
 #ifndef _SPI_H_
 #define _SPI_H_
 
+#include "linux/types.h"
+#include "linux/bitops.h"
+
 /* SPI mode flags */
 #define SPI_CPHA	BIT(0)			/* clock phase */
 #define SPI_CPOL	BIT(1)			/* clock polarity */
-- 
2.17.0

